(function(e,t){"object"===typeof exports&&"object"===typeof module?module.exports=t():"function"===typeof define&&define.amd?define([],t):"object"===typeof exports?exports["ledap-vue-bootstrap"]=t():e["ledap-vue-bootstrap"]=t()})("undefined"!==typeof self?self:this,(function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var l=t[o]={i:o,l:!1,exports:{}};return e[o].call(l.exports,l,l.exports,n),l.l=!0,l.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)n.d(o,l,function(t){return e[t]}.bind(null,l));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="fb15")}({1685:function(e,t,n){},8875:function(e,t,n){var o,l,a;(function(n,i){l=[],o=i,a="function"===typeof o?o.apply(t,l):o,void 0===a||(e.exports=a)})("undefined"!==typeof self&&self,(function(){function e(){const t=Object.getOwnPropertyDescriptor(document,"currentScript");if(!t&&"currentScript"in document&&document.currentScript)return document.currentScript;if(t&&t.get!==e&&document.currentScript)return document.currentScript;try{throw new Error}catch(m){var n,o,l,a=/.*at [^(]*\((.*):(.+):(.+)\)$/gi,i=/@([^@]*):(\d+):(\d+)\s*$/gi,r=a.exec(m.stack)||i.exec(m.stack),s=r&&r[1]||!1,c=r&&r[2]||!1,d=document.location.href.replace(document.location.hash,""),p=document.getElementsByTagName("script");s===d&&(n=document.documentElement.outerHTML,o=new RegExp("(?:[^\\n]+?\\n){0,"+(c-2)+"}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*","i"),l=n.replace(o,"$1").trim());for(var u=0;u<p.length;u++){if("interactive"===p[u].readyState)return p[u];if(p[u].src===s)return p[u];if(s===d&&p[u].innerHTML&&p[u].innerHTML.trim()===l)return p[u]}return null}}return e}))},fb15:function(e,t,n){"use strict";if(n.r(t),"undefined"!==typeof window){var o=window.document.currentScript,l=n("8875");o=l(),"currentScript"in document||Object.defineProperty(document,"currentScript",{get:l});var a=o&&o.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);a&&(n.p=a[1])}var i={"form-item":{template:'<component :is="tag" class="form-group row">\n            <slot name="label" :model="model" :attr="attr">\n                <label class="col-3 col-form-label text-right"> {{label || model.getAttributeLabel(attr)}}{{model.isRequired(attr) ? \'*\' : \'\'}}</label>\n            </slot>\n            <div class="col-9">\n                <slot :model="model" :attr="attr" :validate="validate" :inputListeners="inputListeners">\n                    <baseinput :model="model" :attr="attr" :inputListeners="inputListeners" v-bind="$attrs"></baseinput>\n                </slot>\n                <slot name="error" :model="model" :attr="attr" :showError="showError">\n                    <b-form-invalid-feedback :state="!Boolean(showError)">\n                    {{showError}}\n                    </b-form-invalid-feedback>\n                </slot>\n            </div>\n        </component>'},baseinput:{template:'<div><template v-if="tag !== \'textarea\'">\n            <input class="form-control" :name="attr" :value="model[attr]" :placeholder="model.getAttributeHint(attr)" v-on="inputListeners" v-bind="$attrs" :maxlength="cMaxlength">\n        </template>\n        <template v-else>\n            <textarea class="form-control" :name="attr" :value="model[attr]" :placeholder="model.getAttributeHint(attr)" v-on="inputListeners" v-bind="$attrs" :maxlength="cMaxlength">\n            </textarea>\n        </template></div>'},dropdown:{template:'<select class="form-control" :name="attr" v-on="inputListeners" v-bind="$attrs">\n            <option v-for="key in dictOption.order" :value="key" :selected="key === model[attr]">{{dictOption.list[key]}}</option>\n        </select>'},groupinput:{template:'<group class="btn-group" :max="dictOption.max" :excludes="dictOption.excludes" :init-value="model[attr]" :multiple="dictOption.multiple" @change="groupChange">\n            <slot name="default" v-for="key in dictOption.order" :attr="attr" :data-key="key" :value="dictOption.list[key]" :disabled="hasKey(dictOption.excludes, key) ? true : false">\n                <tab class="btn btn-outline-primary" :disabled="hasKey(dictOption.excludes, key) ? true : false" :data-key="key" :key="key"> {{dictOption.list[key]}}</tab>\n            </slot>\n        </group>'},searchinput:{template:'<div class="position-relative">\n        <input class="form-control" :name="attr" :value="value" :placeholder="model.getAttributeHint(attr)" v-on="listeners" autocomplete="off" v-bind="$attrs">\n        <ul v-show="showList" class="list-unstyled position-absolute w-100 border bg-light" :class="[isHide ? \'invisible\' : \'visible\']" style="z-index: 10;">\n            <li v-for="(model, index) in models" @mousedown="choose(model, index, $event)" style="padding: 6px 12px; cusor: default;">\n                <slot :model="model" :index="index">{{model[itemName]}}</slot>\n            </li>\n        </ul>\n    </div>'},select2:{template:'<div class="position-relative">\n    <div class="form-control d-flex flex-wrap align-items-center" style="height:auto">\n        <span v-if="multiple" v-for="model,key in selected" :key="key">\n            <button class="btn btn-sm btn-light" @click="choose(model, key, $event)">{{model[itemName]}}{{\'  x\'}}</button>&nbsp;\n        </span>\n        <input :name="attr" ref="input" :value="value" :placeholder="model.getAttributeHint(attr)" v-on="listeners" v-bind="$attrs" autocomplete="off" class="border-0 flex-fill mw-100" style="outline-color:white;min-width:0;">\n        <b-icon-x v-if="!multiple && value" @click="clear" style="cursor: pointer;"></b-icon-x>\n    </div>\n    <ul v-show="showList" class="list-unstyled position-absolute w-100 border bg-light" :class="[isHide ? \'invisible\' : \'visible\']" style="z-index: 10;">\n        <div v-if="dataProvider.isLoading" class="text-center py-2">加载中</div>\n        <template v-else>\n            <template v-if="models.length">\n                <li v-for="(model, index) in models" @mousedown="choose(model, index, $event)" style="padding: 6px 12px;cursor: pointer;" :class=\'{"bg-success": selected.hasOwnProperty(model[keyName])}\'>\n                    <slot name="tab" :model="model" :index="index" :isActive="selected.hasOwnProperty(model[keyName])">{{model[itemName]}}</slot>\n                </li>\n            </template>\n            <div v-else class="text-center py-2">无数据</div>\n        </template>\n    </ul>\n</div>'},pager:{template:'<div class="d-flex align-items-center">\n        <slot name="total">\n            <span>共<span class="text-danger">{{ dataProvider.pager.totalCount }}</span>条记录</span>\n            <span class="flex-fill"></span>\n        </slot>\n        <slot :changePage="changePage">\n            <a v-show="dataProvider.pager.hasPrev()" @click="toPrev()" class="text-primary">上一页</a>\n            <a v-show="dataProvider.pager.hasNext()" @click="toNext()" class="ml-10 text-primary">下一页</a>\n            <span class="mx-3">第 {{ dataProvider.pager.currentPage}}/{{ dataProvider.pager.pageCount }} 页</span>\n        </slot>\n        <slot name="form" :changePage="changePage">\n            <form @submit.prevent.stop="changePage(jumpPage)" class="d-flex align-items-center">\n                <span>跳至&nbsp;</span>\n                <input type="text" v-model="jumpPage" class="text-center" style="width:45px;outline:0">\n                <span>&nbsp;页&nbsp;</span>\n                <button type="submit" class="btn btn-primary rounded-0" style="padding:2px 8px">跳转</button>\n            </form>\n        </slot>\n    </div>'},step:{template:'\n        <component :is="tagName" :class="{\'active text-success\': isOpen()}">\n            <slot></slot>\n        </component>'},checkbox:{template:'<component :is="tagName" class="custom-control custom-checkbox" :class="{\'active\': isOpen()}" @click="click">\n            <slot name="input" :isOpen="isOpen" :disabled="disabled">\n                <input class="custom-control-input" type="checkbox" :name="attr" :checked="isOpen()" :disabled="disabled" v-bind="$attrs"/>\n            </slot>\n            <label class="custom-control-label">\n                <slot></slot>\n            </label>\n        </component>'},radio:{template:'\n        <component :is="tagName" class="custom-control custom-radio" :class="{\'active\': isOpen()}" @click="click">\n            <slot name="input" :isOpen="isOpen" :disabled="disabled">\n                <input type="radio" class="custom-control-input" :disabled="disabled" :checked="isOpen()" :name="attr" v-bind="$attrs"/>\n            </slot>\n            <label class="custom-control-label">\n                <slot></slot>\n            </label>\n        </component>'}},r=i;n("1685");window.themeConfig=r;var s=r;t["default"]=s}})}));
//# sourceMappingURL=ledap-vue-bootstrap.umd.min.js.map